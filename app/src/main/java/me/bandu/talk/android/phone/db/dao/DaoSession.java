package me.bandu.talk.android.phone.db.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import me.bandu.talk.android.phone.db.bean.UnitBean;
import me.bandu.talk.android.phone.db.bean.LessonBean;
import me.bandu.talk.android.phone.db.bean.PartBean;
import me.bandu.talk.android.phone.db.bean.CentenceBean;
import me.bandu.talk.android.phone.db.bean.DownloadBean;
import me.bandu.talk.android.phone.db.bean.MyWrodBean;

import me.bandu.talk.android.phone.db.dao.UnitBeanDao;
import me.bandu.talk.android.phone.db.dao.LessonBeanDao;
import me.bandu.talk.android.phone.db.dao.PartBeanDao;
import me.bandu.talk.android.phone.db.dao.CentenceBeanDao;
import me.bandu.talk.android.phone.db.dao.DownloadBeanDao;
import me.bandu.talk.android.phone.db.dao.MyWrodBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig unitBeanDaoConfig;
    private final DaoConfig lessonBeanDaoConfig;
    private final DaoConfig partBeanDaoConfig;
    private final DaoConfig centenceBeanDaoConfig;
    private final DaoConfig downloadBeanDaoConfig;
    private final DaoConfig myWrodBeanDaoConfig;

    private final UnitBeanDao unitBeanDao;
    private final LessonBeanDao lessonBeanDao;
    private final PartBeanDao partBeanDao;
    private final CentenceBeanDao centenceBeanDao;
    private final DownloadBeanDao downloadBeanDao;
    private final MyWrodBeanDao myWrodBeanDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        unitBeanDaoConfig = daoConfigMap.get(UnitBeanDao.class).clone();
        unitBeanDaoConfig.initIdentityScope(type);

        lessonBeanDaoConfig = daoConfigMap.get(LessonBeanDao.class).clone();
        lessonBeanDaoConfig.initIdentityScope(type);

        partBeanDaoConfig = daoConfigMap.get(PartBeanDao.class).clone();
        partBeanDaoConfig.initIdentityScope(type);

        centenceBeanDaoConfig = daoConfigMap.get(CentenceBeanDao.class).clone();
        centenceBeanDaoConfig.initIdentityScope(type);

        downloadBeanDaoConfig = daoConfigMap.get(DownloadBeanDao.class).clone();
        downloadBeanDaoConfig.initIdentityScope(type);

        myWrodBeanDaoConfig = daoConfigMap.get(MyWrodBeanDao.class).clone();
        myWrodBeanDaoConfig.initIdentityScope(type);

        unitBeanDao = new UnitBeanDao(unitBeanDaoConfig, this);
        lessonBeanDao = new LessonBeanDao(lessonBeanDaoConfig, this);
        partBeanDao = new PartBeanDao(partBeanDaoConfig, this);
        centenceBeanDao = new CentenceBeanDao(centenceBeanDaoConfig, this);
        downloadBeanDao = new DownloadBeanDao(downloadBeanDaoConfig, this);
        myWrodBeanDao = new MyWrodBeanDao(myWrodBeanDaoConfig, this);

        registerDao(UnitBean.class, unitBeanDao);
        registerDao(LessonBean.class, lessonBeanDao);
        registerDao(PartBean.class, partBeanDao);
        registerDao(CentenceBean.class, centenceBeanDao);
        registerDao(DownloadBean.class, downloadBeanDao);
        registerDao(MyWrodBean.class, myWrodBeanDao);
    }
    
    public void clear() {
        unitBeanDaoConfig.getIdentityScope().clear();
        lessonBeanDaoConfig.getIdentityScope().clear();
        partBeanDaoConfig.getIdentityScope().clear();
        centenceBeanDaoConfig.getIdentityScope().clear();
        downloadBeanDaoConfig.getIdentityScope().clear();
        myWrodBeanDaoConfig.getIdentityScope().clear();
    }

    public UnitBeanDao getUnitBeanDao() {
        return unitBeanDao;
    }

    public LessonBeanDao getLessonBeanDao() {
        return lessonBeanDao;
    }

    public PartBeanDao getPartBeanDao() {
        return partBeanDao;
    }

    public CentenceBeanDao getCentenceBeanDao() {
        return centenceBeanDao;
    }

    public DownloadBeanDao getDownloadBeanDao() {
        return downloadBeanDao;
    }

    public MyWrodBeanDao getMyWrodBeanDao() {
        return myWrodBeanDao;
    }

}
